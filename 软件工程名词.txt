软件危机：
    软件危机是指在计算机软件的开发和维护过程中所遇到的一系列严重问题。
    概括的说，包含两方面的问题：
        如何开发软件，以满足对软件日益增长的需求；
        如何维护数量不断膨胀的已有软件。
软件工程：
    软件工程是采用工程的概念、原理、技术和方法来开发与维护软件一门学科，
    从而经济地开发出高质量的软件并有效的维护它。
快速原型：
    快速原型是快速建立起来的可以在计算机上运行的程序，它所能完成的
    功能往往是最终产品能完成的功能的一个子集。
数据流图：
    是一种图形化技术，它描绘信息流和数据从输入移动到输出的过程中所经受的变换。
数据字典：
    数据字典是描述数据流图中数据信息的集合。它对数据流图上每一个成分：
    数据项、文件（数据结构）、数据流、数据储存、加工和外部项等
    给以定义和说明；它主要由数据流描述、加工描述和文件描述三部分组成。
模块化：
    模块化就是把程序划分成独立命名且可独立访问的模块，
    每个模块完成一个子功能，把这些模块集成起来构成一个整体，
    可以完成指定的功能满足用户的功能。
内聚：
    是衡量一个模块内部各个元素彼此结合的紧密程度。内聚要高，
    每个模块完成一个相对独立的特定子功能。理想内聚的模块只做一件事情。
耦合：
    是对一个软件结构内不同模块之间互连程度的度量。耦合要低。
    即每个模块和其他模块之间的关系要简单。
软件宽度：
    是软件结构中同一层次上的模块总数的最大值。
软件深度：
    表示软件结构中控制的层数，它往往能粗略地标志一个系统的大小和复杂程度。
软件扇入：
    有多少个上级模块直接调用它。
软件扇出：
    一个模块直接控制（调用）的模块数目。
黑盒测试：
    黑盒测试也称为功能测试，它着眼于程序的外部特征，而不考虑程序的内部逻辑结构。
    测试者把被测程序看成一个黑盒，不用关心程序的内部结构。
    黑盒测试是在程序接口处进行测试，他只简称程序功能是否能按照规格说明书的规定正常使用，
    程序是否能适当的接受输入数据产生正确的输出信息，并且保持外部信息（如数据库或文件的完整性）
白盒测试：
    白盒测试（结构测试），把程序看成装在一个透明盒子里，
    测试者完全知道程序的结构和处理算法，按照程序内部的逻辑，测试程序，
    检测程序中的主要执行通路是否都能按预定要求正常工作。
逻辑覆盖的种类：
    语句覆盖、判定覆盖、条件覆盖、判定/条件覆盖、条件组合覆盖、点覆盖、边覆盖。
调试：是在测试发现错误之后排除错误的过程。
软件维护：
    软件维护就是在软件已经交付使用之后，
    为了改正错误或满足新的需要而修改软件的过程。
类：
    类就是对具有相同数据和相同操作的一组相似对象的定义（集合）
对象：
    对象是客观事物或概念的抽象表述，即对客观存在的事物的描述统称为对象，
    是将一组数据和使用该数组的一组基本操作或过程封装在一起的实体。
封装性：
    封装就是把对象的数据和实现操作的代码集中起来放在对象内部。
继承：
    继承是子类自动地共享基类中定义的数据和方法的机制。
软件的质量
    软件质量就是“软件与明确地和隐含地定义的需求相一致的程度”。
